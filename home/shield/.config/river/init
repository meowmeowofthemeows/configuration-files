#!/bin/sh

# env variables

export WLR_NO_HARDWARE_CURSORS=1
export WLR_RENDERER=vulkan

# display

wlr-randr --output DP-1 --mode 1920x1080@239.761002

# audio

pipewire &
pipewire-pulse &
wireplumber &

# bluetooth

while true; do bluetoothctl connect 40:72:18:2D:73:46; sleep 5; done >/dev/null &

# mouse

riverctl input pointer-1133-16518-Logitech_G703_LS pointer-accel -0.3
riverctl input pointer-1133-16518-Logitech_G703_LS accel-profile flat

# wallpaper
nohup swaybg --image $HOME/Pictures/wallpaperpatterntemplate2.png >/dev/null 2>&1 &

# border
riverctl rule-add -app-id '*' ssd
riverctl border-width 0

# binds
riverctl map normal Super Return spawn foot

# screenshot and screencast
riverctl map normal None Print spawn 'grim /home/$USER/images/screenshots/"$(date +"%d-%m-%y_%H:%M:%S_fllscr_grim.png")"' # fullscreen screenshot
riverctl map normal Shift Print spawn 'grim -g "$(slurp)" /home/$USER/images/screenshots/"$(date +"%d-%m-%y_%H:%M:%S_selscr_grim.png")"' # selection screenshot
# todo write command to screenshot focused window
riverctl map normal Alt Print spawn 'wf-recorder -f /home/$USER/videos/screencasts/"$(date +"%d-%m-%y_%H:%M:%S_fllscr_wf-recorder.mkv")"'
riverctl map normal Alt+Shift Print spawn 'wf-recorder -g "$(slurp)" -f /home/$USER/videos/screencasts/"$(date +"%d-%m-%y_%H:%M:%S_selscr_wf-recorder.mkv")"' # selection screencast
riverctl map normal Alt+Shift+Super Print spawn 'killall -s SIGINT wf-recorder'

# close window
riverctl map normal Super+Shift Q close

# exit river
riverctl map normal Super+Shift E exit

# switch windows
riverctl map normal Alt Tab focus-view next
riverctl map normal Alt+Shift Tab focus-view previous

# move windows
riverctl map normal Super Left move left 30
riverctl map normal Super Down move down 30
riverctl map normal Super Up move up 30
riverctl map normal Super Right move right 30

# snap windows to edges
riverctl map normal Super+Shift Left snap left
riverctl map normal Super+Shift Down snap down
riverctl map normal Super+Shift Up snap up
riverctl map normal Super+Shift Right snap right

# drag move window
riverctl map-pointer normal Super BTN_LEFT move-view

# drag resize window
riverctl map-pointer normal Super BTN_RIGHT resize-view

for i in $(seq 1 9)
do
    tags=$((1 << ($i - 1)))

    # Super+[1-9] to focus tag [0-8]
    riverctl map normal Super $i set-focused-tags $tags

    # Super+Shift+[1-9] to tag focused view with tag [0-8]
    riverctl map normal Super+Shift $i set-view-tags $tags

    # Super+Control+[1-9] to toggle focus of tag [0-8]
    riverctl map normal Super+Control $i toggle-focused-tags $tags

    # Super+Shift+Control+[1-9] to toggle tag [0-8] of focused view
    riverctl map normal Super+Shift+Control $i toggle-view-tags $tags
done

# toggle window fullscreen
riverctl map normal Super F toggle-fullscreen

# Various media key mapping examples for both normal and locked mode which do
# not have a modifier
for mode in normal locked
do
    # Eject the optical drive (well if you still have one that is)
    riverctl map $mode None XF86Eject spawn 'eject -T'

    # Control pulse audio volume with pamixer (https://github.com/cdemoulins/pamixer)
    riverctl map $mode None XF86AudioRaiseVolume  spawn 'pamixer -i 5'
    riverctl map $mode None XF86AudioLowerVolume  spawn 'pamixer -d 5'
    riverctl map $mode None XF86AudioMute         spawn 'pamixer --toggle-mute'

    # Control MPRIS aware media players with playerctl (https://github.com/altdesktop/playerctl)
    riverctl map $mode None XF86AudioMedia spawn 'playerctl play-pause'
    riverctl map $mode None XF86AudioPlay  spawn 'playerctl play-pause'
    riverctl map $mode None XF86AudioPrev  spawn 'playerctl previous'
    riverctl map $mode None XF86AudioNext  spawn 'playerctl next'

    # Control screen backlight brightness with brightnessctl (https://github.com/Hummer12007/brightnessctl)
    riverctl map $mode None XF86MonBrightnessUp   spawn 'brightnessctl set +5%'
    riverctl map $mode None XF86MonBrightnessDown spawn 'brightnessctl set 5%-'
done

# Set keyboard repeat rate
riverctl set-repeat 50 300

# Make all views with an app-id that starts with "float" and title "foo" start floating.
riverctl rule-add -app-id '*' float

# Make all views with app-id "bar" and any title use client-side decorations
riverctl rule-add -app-id "bar" csd

riverctl default-layout floating
